<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.welcome.dao.MemberParentDao">

	<sql id="Base_Column_List">
    `id`,`head_photo`,`signature`,`nick_name`,`par_number`,`password`,`spare`,`par_openid`,`create_time`  </sql>

	<select id="get" resultType="com.bootdo.welcome.domain.MemberParentDO">
		select
		<include refid="Base_Column_List" />
		from ed_member_parent where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.welcome.domain.MemberParentDO">
		select
		<include refid="Base_Column_List" />
		from ed_member_parent
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="headPhoto != null and headPhoto != ''"> and head_photo = #{headPhoto} </if>
		  		  <if test="signature != null and signature != ''"> and signature = #{signature} </if>
		  		  <if test="nickName != null and nickName != ''"> and nick_name = #{nickName} </if>
		  		  <if test="parNumber != null and parNumber != ''"> and par_number = #{parNumber} </if>
		  		  <if test="password != null and password != ''"> and password = #{password} </if>
		  		  <if test="spare != null and spare != ''"> and spare = #{spare} </if>
		  		  <if test="parOpenid != null and parOpenid != ''"> and par_openid = #{parOpenid} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from ed_member_parent
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="headPhoto != null and headPhoto != ''"> and head_photo = #{headPhoto} </if>
		  		  <if test="signature != null and signature != ''"> and signature = #{signature} </if>
		  		  <if test="nickName != null and nickName != ''"> and nick_name = #{nickName} </if>
		  		  <if test="parNumber != null and parNumber != ''"> and par_number = #{parNumber} </if>
		  		  <if test="password != null and password != ''"> and password = #{password} </if>
		  		  <if test="spare != null and spare != ''"> and spare = #{spare} </if>
		  		  <if test="parOpenid != null and parOpenid != ''"> and par_openid = #{parOpenid} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.welcome.domain.MemberParentDO" useGeneratedKeys="true" keyProperty="id">
		insert into ed_member_parent
		(
											`head_photo`, 
									`signature`, 
									`nick_name`, 
									`par_number`, 
									`password`, 
									`spare`, 
									`par_openid`, 
									`create_time`
						)
		values
		(
													#{headPhoto}, 
											#{signature}, 
											#{nickName}, 
											#{parNumber}, 
											#{password}, 
											#{spare}, 
											#{parOpenid}, 
											#{createTime}
						)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.welcome.domain.MemberParentDO">
		update ed_member_parent 
		<set>
			<if test="headPhoto != null">`head_photo` = #{headPhoto}, </if>
			<if test="signature != null">`signature` = #{signature}, </if>
			<if test="nickName != null">`nick_name` = #{nickName}, </if>
			<if test="parNumber != null">`par_number` = #{parNumber}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="spare != null">`spare` = #{spare}, </if>
			<if test="parOpenid != null">`par_openid` = #{parOpenid}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from ed_member_parent where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from ed_member_parent where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getByStudyNumber">
		select
		<include refid="Base_Column_List" />
		from ed_member_parent where par_number = #{value}
	</select>

	<update id="updateByStudyNumber">
		update ed_member_parent
		set par_openid = #{openid}
		where par_number = #{studyNumber}
	</update>
</mapper>